/home/balasubramaniyand/gmail/superset/docker/pythonpath_dev

how to mesion the docker
Digest: sha256:7208d630cf38910c1146c31c10515c4f3f79ea44d8d6962570aac8f1c7b5548f
Status: Downloaded newer image for apachesuperset.docker.scarf.sh/apache/superset:latest
Creating superset_cache ... done
Creating superset_db    ... done
Creating superset_app         ... error
Creating superset_worker ... 
Creating superset_worker_beat ... 
Creating superset_init        ... 
Creating superset_worker_beat ... error
ERROR: for superset_app  Cannot create container for service superset: invalid mode: /app/pythonpath

Creating superset_worker      ... error

ERROR: for superset_init  Cannot create container for service superset-init: invalid mode: /app/pythonpath

ERROR: for superset_worker  Cannot create container for service superset-worker: invalid mode: /app/pythonpath

ERROR: for superset  Cannot create container for service superset: invalid mode: /app/pythonpath

ERROR: for superset-worker-beat  Cannot create container for service superset-worker-beat: invalid mode: /app/pythonpath

ERROR: for superset-init  Cannot create container for service superset-init: invalid mode: /app/pythonpath

ERROR: for superset-worker  Cannot create container for service superset-worker: invalid mode: /app/pythonpath
ERROR: Encountered errors while bringing up the project.
balasubramaniyand@CHNIOPEXL5097:~/gmail/superset$ 




x-superset-image: &superset-image apachesuperset.docker.scarf.sh/apache/superset:${TAG:-latest}
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes:
  &superset-volumes # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  - superset_home:/app/superset_home
   ./pythonpath:/app/pythonpath

version: "3.7"
services:
  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    env_file:
      -  docker/.env # default
        
        #-  docker/.env-local # optional override
        #required: false
    image: postgres:15
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  superset:
    env_file:
      -  docker/.env # default
        # -  docker/.env-local # optional override
        #required: false
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file:
      -  docker/.env # default
        #-  docker/.env-local # optional override
      
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file:
      -  docker/.env # default
        
        #-  docker/.env-local # optional override

    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
        ]

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file:
      -  docker/.env # default
        
        #-  docker/.env-local # optional override

    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false

